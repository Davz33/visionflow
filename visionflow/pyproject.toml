[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "visionflow"
version = "0.1.0"
description = "VisionFlow is a video generation and evaluation platform with WAN 2.1 and LangChain orchestration"
authors = [
    {name = "Davide Vitiello", email = "davide_vitiello@outlook.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["video-generation", "ai", "wan2.1", "microservices", "langchain", "kubernetes"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Web framework
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.7.0",
    "pydantic-settings>=2.0.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.7",
    "redis>=5.0.0",
    
    # Task queue
    "celery>=5.3.0",
    
    # Logging and monitoring
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    
    # HTTP client
    "httpx>=0.25.0",
    
    # Storage
    "minio>=7.2.0",
    
    # Image/Video processing
    "pillow>=10.1.0",
    "opencv-python>=4.8.0.76",
    "ffmpeg-python>=0.2.0",
    "numpy>=1.24.0",
    
    # ML/AI - Enhanced for WAN 2.1 video generation
    "torch>=2.4.0",
    "torchvision>=0.17.0", 
    "transformers>=4.40.0",
    "accelerate>=0.25.0",
    "diffusers>=0.31.0",
    "huggingface-hub>=0.20.0",
    "xformers>=0.0.23",
    "safetensors>=0.4.0",
    "psutil>=5.9.0",
    "imageio[ffmpeg]>=2.33.0",
    "av>=10.0.0",
    
    # LangChain and orchestration
    "langchain>=0.2.0",
    "langgraph>=0.0.20",
    "langchain-community>=0.0.10",
    "langchain-google-vertexai>=0.1.0",
    
    # Google Cloud
    "google-cloud-storage>=2.10.0",
    "google-cloud-aiplatform>=1.35.0",
    "google-cloud-secret-manager>=2.16.0",
    "google-cloud-logging>=3.8.0",
    "google-cloud-monitoring>=2.16.0",
    "google-auth>=2.23.0",
    
    # Kubernetes client for model registry
    "kubernetes>=28.1.0",

    # Production
    "gunicorn>=21.2.0",          # Production WSGI server
    "sentry-sdk[fastapi]>=1.40.0", # Error tracking
    "asyncpg>=0.29.0",           # Fast async PostgreSQL
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
]

monitoring = [
    "grafana-client>=3.7.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
]

[project.urls]
Homepage = "https://github.com/davz3/visionflow"
Repository = "https://github.com/davz3/visionflow.git"

[tool.setuptools.packages.find]
where = ["."]
include = ["visionflow*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]