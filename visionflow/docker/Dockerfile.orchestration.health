# Health-only orchestration service (no ML dependencies for now)  
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install minimal dependencies for health service
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir \
    fastapi==0.116.1 \
    uvicorn[standard]==0.35.0 \
    pydantic==2.11.7

# Production stage
FROM python:3.11-slim

# Install runtime dependencies  
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy health service code
COPY visionflow/services/orchestration/health_service.py /app/visionflow/services/orchestration/health_service.py
COPY visionflow/__init__.py /app/visionflow/
COPY visionflow/services/__init__.py /app/visionflow/services/
COPY visionflow/services/orchestration/__init__.py /app/visionflow/services/orchestration/

# Create directories and user
RUN mkdir -p /app/logs && \
    useradd --create-home --shell /bin/bash --uid 1000 app && \
    chown -R app:app /app

USER app

# Environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    SERVICE_NAME=orchestration-service

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Run health service
CMD ["uvicorn", "visionflow.services.orchestration.health_service:app", "--host", "0.0.0.0", "--port", "8001"]