apiVersion: batch/v1
kind: Job
metadata:
  name: evaluation-dashboard-import
  namespace: visionflow-local
spec:
  template:
    spec:
      containers:
      - name: dashboard-importer
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Grafana to be ready
          echo "Waiting for Grafana to be ready..."
          sleep 30
          
          # Check if Grafana is accessible
          echo "Checking Grafana health..."
          curl -f http://grafana-service:3000/api/health || exit 1
          
          # Import evaluation dashboard
          echo "Importing evaluation dashboard..."
          curl -X POST \
            -H "Content-Type: application/json" \
            -d @/dashboard/evaluation_dashboard.json \
            http://grafana-service:3000/api/dashboards/db \
            -u ${GRAFANA_USER:-admin}:${GRAFANA_PASSWORD:-admin}
          
          if [ $? -eq 0 ]; then
            echo "✅ Dashboard import completed successfully"
          else
            echo "❌ Dashboard import failed"
            exit 1
          fi
        env:
        - name: GRAFANA_USER
          value: "admin"
        - name: GRAFANA_PASSWORD
          value: "admin"
        volumeMounts:
        - name: dashboard-volume
          mountPath: /dashboard
      volumes:
      - name: dashboard-volume
        configMap:
          name: evaluation-dashboard-config
      restartPolicy: Never
  backoffLimit: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: evaluation-dashboard-config
  namespace: visionflow-local
data:
  # Reference to external dashboard file
  evaluation_dashboard.json: |
    # Dashboard content will be populated from external file
    # This approach keeps K8s YAML clean and maintainable
